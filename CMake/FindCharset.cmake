# Find charset library
#
#  Will define cmake target Charset::Charset
#
#  LIBCHARSET_INCLUDE_DIRS - where to find localcharset.h, etc
#  LIBCHARSET_LIBRARIES    - Lists of libraries when using charset
#  LIBCHARSET_FOUND        - True if charset found

include(FindPackageHandleStandardArgs)

# Look for the header file
find_path(LIBCHARSET_INCLUDE_DIR NAMES localcharset.h)
mark_as_advanced(LIBCHARSET_INCLUDE_DIR)

set(LIBCHARSET_LIBS charset)
find_library(LIBCHARSET_LIBRARY NAMES ${LIBCHARSET_LIBS})
mark_as_advanced(LIBCHARSET_LIBRARY)

set(LIBCHARSET_LIBS_DEBUG charsetd)
find_library(LIBCHARSET_LIBRARY_DEBUG NAMES ${LIBCHARSET_LIBS_DEBUG})
mark_as_advanced(LIBCHARSET_LIBRARY)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBCHARSET REQUIRED_VARS LIBCHARSET_LIBRARY LIBCHARSET_INCLUDE_DIR)

if(LIBCHARSET_FOUND)
  set(LIBCHARSET_INCLUDE_DIRS ${LIBCHARSET_INCLUDE_DIR})
  set(LIBCHARSET_LIBRARIES ${LIBCHARSET_LIBRARY})
endif()

if(LIBCHARSET_INCLUDE_DIRS AND LIBCHARSET_LIBRARIES)
  add_library(Charset::Charset UNKNOWN IMPORTED)
  set_target_properties(Charset::Charset PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${LIBCHARSET_INCLUDE_DIR}")

  if(LIBCHARSET_LIBRARIES AND LIBCHARSET_LIBRARIES_DEBUG)
    set(LIBCHARSET_LIBRARIES ${LIBCHARSET_LIBRARIES})
    set_property(TARGET Charset::Charset APPEND PROPERTY
     IMPORTED_CONFIGURATIONS RELEASE)

    set_target_properties(Charset::Charset PROPERTIES
      IMPORTED_LOCATION_RELEASE "${LIBCHARSET_LIBRARIES}")
  endif()

  if(LIBCHARSET_LIBRARIES_DEBUG)
    set_property(TARGET Charset::Charset APPEND PROPERTY
     IMPORTED_CONFIGURATIONS DEBUG)

    set_target_properties(Charset::Charset PROPERTIES
      IMPORTED_LOCATION_DEBUG "${LIBCHARSET_LIBRARIES_DEBUG}")
  endif()

  if(LIBCHARSET_LIBRARIES AND NOT LIBCHARSET_LIBRARIES_DEBUG)
    set_property(TARGET Charset::Charset APPEND PROPERTY
     IMPORTED_LOCATION "${LIBCHARSET_LIBRARIES}")
  endif()
endif()